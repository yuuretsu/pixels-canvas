(function(a,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(a=typeof globalThis<"u"?globalThis:a||self,s(a.PixelsCanvas={}))})(this,function(a){"use strict";function s(h,t){const e=[];for(let n=0;n<h.length;n+=t)e.push(h.slice(n,n+t));return e}function g(h,t){for(const e in t)h.style[e]=t[e]}class u{constructor(t){const{width:e,height:n,pixelSize:i,canvas:o}={pixelSize:1,...t};this.canvasContext=(o||document.createElement("canvas")).getContext("2d",{willReadFrequently:!0}),this.canvas.width=e,this.canvas.height=n,g(this.canvas,{width:`${e*i}px`,height:`${n*i}px`,imageRendering:"pixelated"})}get canvas(){return this.canvasContext.canvas}get width(){return this.canvas.width}get height(){return this.canvas.height}setPixels(t,e,n){const i=t[0].length,o=t.length,c=new ImageData(i,o);for(let r=0;r<o;r++)for(let d=0;d<i;d++){const[v,x,f,C]=t[r][d],l=(r*i+d)*4;c.data[l]=v,c.data[l+1]=x,c.data[l+2]=f,c.data[l+3]=C}this.canvasContext.putImageData(c,e,n)}chunkChannels(t){return s(s(t,4),this.width)}createPixels(){return this.chunkChannels(Array.from({length:this.width*this.height*4}))}getPixels(){const t=this.canvasContext.getImageData(0,0,this.width,this.height);return this.chunkChannels([...t.data])}clear(){this.canvasContext.save(),this.canvasContext.resetTransform(),this.canvasContext.clearRect(0,0,this.width,this.height),this.canvasContext.restore()}}a.PixelsCanvas=u,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
